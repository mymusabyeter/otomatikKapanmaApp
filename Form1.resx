<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEANDAAAAAAAABoDwAAFgAAACgAAAA0AAAAYAAAAAEACAAAAAAAQAsAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAMwAAAGYAAACZAAAAzAAAAP8AAAAAMwAAMzMAAGYzAACZMwAAzDMAAP8zAAAAZgAAM2YAAGZm
        AACZZgAAzGYAAP9mAAAAmQAAM5kAAGaZAACZmQAAzJkAAP+ZAAAAzAAAM8wAAGbMAACZzAAAzMwAAP/M
        AAAA/wAAM/8AAGb/AACZ/wAAzP8AAP//AAAAADMAMwAzAGYAMwCZADMAzAAzAP8AMwAAMzMAMzMzAGYz
        MwCZMzMAzDMzAP8zMwAAZjMAM2YzAGZmMwCZZjMAzGYzAP9mMwAAmTMAM5kzAGaZMwCZmTMAzJkzAP+Z
        MwAAzDMAM8wzAGbMMwCZzDMAzMwzAP/MMwAA/zMAM/8zAGb/MwCZ/zMAzP8zAP//MwAAAGYAMwBmAGYA
        ZgCZAGYAzABmAP8AZgAAM2YAMzNmAGYzZgCZM2YAzDNmAP8zZgAAZmYAM2ZmAGZmZgCZZmYAzGZmAP9m
        ZgAAmWYAM5lmAGaZZgCZmWYAzJlmAP+ZZgAAzGYAM8xmAGbMZgCZzGYAzMxmAP/MZgAA/2YAM/9mAGb/
        ZgCZ/2YAzP9mAP//ZgAAAJkAMwCZAGYAmQCZAJkAzACZAP8AmQAAM5kAMzOZAGYzmQCZM5kAzDOZAP8z
        mQAAZpkAM2aZAGZmmQCZZpkAzGaZAP9mmQAAmZkAM5mZAGaZmQCZmZkAzJmZAP+ZmQAAzJkAM8yZAGbM
        mQCZzJkAzMyZAP/MmQAA/5kAM/+ZAGb/mQCZ/5kAzP+ZAP//mQAAAMwAMwDMAGYAzACZAMwAzADMAP8A
        zAAAM8wAMzPMAGYzzACZM8wAzDPMAP8zzAAAZswAM2bMAGZmzACZZswAzGbMAP9mzAAAmcwAM5nMAGaZ
        zACZmcwAzJnMAP+ZzAAAzMwAM8zMAGbMzACZzMwAzMzMAP/MzAAA/8wAM//MAGb/zACZ/8wAzP/MAP//
        zAAAAP8AMwD/AGYA/wCZAP8AzAD/AP8A/wAAM/8AMzP/AGYz/wCZM/8AzDP/AP8z/wAAZv8AM2b/AGZm
        /wCZZv8AzGb/AP9m/wAAmf8AM5n/AGaZ/wCZmf8AzJn/AP+Z/wAAzP8AM8z/AGbM/wCZzP8AzMz/AP/M
        /wAA//8AM///AGb//wCZ//8AzP//AP///wAAAAAADQ0NABoaGgAoKCgANTU1AENDQwBQUFAAXV1dAGtr
        awB4eHgAhoaGAJOTkwChoaEArq6uALu7uwDJyckA1tbWAOTk5ADx8fEA////AAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA19fX19fX19fX19fX19fX19fX19fX19fX16zX19fX19fX19fX19fX19fX19fX19fX19fX19fX
        19fX19fX19fX19fX19fX19fX19fX16wArNfX19fX19fX19fX19fX19fX19fX19fX19cAAAAAAACs19fX
        19fX19fX19fX19fX19eBAFbX19fX19fX19fX19fX19fX19cAAAAAAABWAAAAAAAAVtfX19fX19fX19fX
        19fX19fXAAAArNfX19fX19fX19fX19fX19eBAAAAAAAAgSsAAAAAAFbX19fX19fX19fX19fX19fXgQAA
        ACvX19fX19fX19fX19fX19fXgQAAAAAAAKwrAAAAAAAA19fX19fX19fX19fX19fXrCsAAAAArNfX19fX
        19fX19fX19fX1ysAAAAAAADXgQAAAAAAAKzX19fX19fX19fX19fX14EAAAAAAFbX19fX19fX19fX19fX
        19cAAAAAAABW16wAAAAAAACB19fX19fX19fX19fX19cAAAAAAAAArNfX19fX19fX19fX19esAAAAAAAA
        VtfXAAAAAAAAVtfX19fX19fX19fX19eBAAAAAAAAAFbX19fX19fX19fX19fXgQAAAAAAAKzX1ysAAAAA
        ACvX19fX19fX19fX19esKwAAAAAAAAAArNfX19fX19fX19fX11YAAAAAAADX19dWAAAAAAAA19fX19fX
        19fX19fXrAAAAAAAAAAAAFbX19fX19fX19fX19cAAAAAAAAr19fXrAAAAAAAAIHX19fX19fX19fX1ysA
        AAAAAAAAAAAArNfX19fX19fX19esAAAAAAAAgdfX19cAAAAAAACB19fX19fX19fX14EAAAAAAAAAAAAA
        AFbX19fX19fX19fXrAAAAAAAAKzX19fXAAAAAAAAK9fX19fX19fX19crAAAAAAAAAAAAAAAArNfX19fX
        19fX11YAAAAAAADX19fX11YAAAAAACvX19fX19fX19esAAAAAAAAKwAAAAAAAFbX19fX19fX19crAAAA
        AAAr19fX19eBAAAAAAAA19fX19fX19fXKwAAAAAAANcAAAAAAAAA19fX19fX19fXAAAAAAAAVtfX19fX
        rAAAAAAAAIHX19fX19fXrAAAAAAAAFbXgQAAAAAAAFbX19fX19fXrAAAAAAAAKzX19fX19cAAAAAAABW
        19fX19fX1ysAAAAAAACB16wAAAAAAAAArNfX19fX14EAAAAAAACs19fX19fXKwAAAAAAK9fX19fX16wA
        AAAAAAAA19fXKwAAAAAAAIHX19fX19crAAAAAAAA19fX19fX14EAAAAAAACs19fX19crAAAAAAAAgdfX
        16wAAAAAAAAA19fX19fXKwAAAAAAVtfX19fX19eBAAAAAAAArNfX19esAAAAAAAAAKzX19fXVgAAAAAA
        AFbX19fX1wAAAAAAAIHX19fX19fX1wAAAAAAAFbX19fXVgAAAAAAAFbX19fX14EAAAAAAAAArNfX14EA
        AAAAAACs19fX19fX19crAAAAAABW19fX1wAAAAAAAADX19fX19fXAAAAAAAAAIHX19dWAAAAAAAr19fX
        19fX19fXVgAAAAAAANfX11YAAAAAAABW19fX19fX14EAAAAAAAAA19fXKwAAAAAAK9fX19fX19fX16wA
        AAAAAACs16wAAAAAAAAArNfX19fX19fXKwAAAAAAAIHX1ysAAAAAAIHX19fX19fX19esAAAAAAAArNdW
        AAAAAAAAK9fX19fX19fX11YAAAAAAAAr16wAAAAAAACB19fX19fX19fX1wAAAAAAAIHXAAAAAAAAAKzX
        19fX19fX19fXAAAAAAAAAKysAAAAAAAA19fX19fX19fX19dWAAAAAABWgQAAAAAAACvX19fX19fX19fX
        11YAAAAAAAArgQAAAAAAK9fX19fX19fX19fXgQAAAAAAK1YAAAAAAACB19fX19fX19fX19esKwAAAAAA
        K1YAAAAAAFbX19fX19fX19fX16wAAAAAACsAAAAAAAAA19fX19fX19fX19fX1ysAAAAAAAArAAAAAACB
        19fX19fX19fX19fXKwAAAAAAAAAAAAAAgdfX19fX19fX19fX19esAAAAAAAAAAAAAAAArNfX19fX19fX
        19fX1ysAAAAAAAAAAAAAK6zX19fX19fX19fX19fX1ysAAAAAAAAAAAAAANfX19fX19fX19fX19eBAAAA
        AAAAAAAAAIHX19fX19fX19fX19fX19eBAAAAAAAAAAAAAFbX19fX19fX19fX19fXgQAAAAAAAAAAAADX
        19fX19fX19fX19fX19fX1wAAAAAAAAAAAABW19fX19fX19fX19fX19cAAAAAAAAAAACB19fX19fX19fX
        19fX19fX19eBAAAAAAAAAAAArNfX19fX19fX19fX19fXKwAAAAAAAAAArNfX19fX19fX19fX19fX19fX
        rCsAAAAAAAAAANfX19fX19fX19fX19fX11YAAAAAAAAAVtfX19fX19fX19fX19fX19fX19dWAAAAAAAA
        ACvX19fX19fX19fX19fX19eBAAAAAAAAAKzX19fX19fX19fX19fX19fX19fX1wAAAAAAAACB19fX19fX
        19fX19fX19fXrAAAAAAAAFbX19fX19fX19fX19fX19fX19fX19dWAAAAAAAArNfX19fX19fX19fX19fX
        19cAAAAAAACs19fX19fX19fX19fX19fX19fX19fXrAAAAAAAANfX19fX19fX19fX19fX19fXVgAAAAAr
        19fX19fX19fX19fX19fX19fX19fX19dWAAAAACvX19fX19fX19fX19fX19fX11YAAAAArNfX19fX19fX
        19fX19fX19fX19fX19fXrAAAAABW19fX19fX19fX19fX19fX19esAAAAK9fX19fX19fX19fX19fX19fX
        19fX19fX19dWAAAArNfX19fX19fX19fX19fX19fXrAAAAIHX19fX19fX19fX19fX19fX19fX19fX19fX
        gQAAAKzX19fX19fX19fX19fX19fX19crACvX19fX19fX19fX19fX19fX19fX19fX19fX19crACvX19fX
        19fX19fX19fX19fX19fXVgCB19fX19fX19fX19fX19fX19fX19fX19fX19fXgQBW19fX19fX19fX19fX
        19fX19fX14Er19fX19fX19fX19fX19fX19fX19fX19fX19fX19crgdfX19fX19fX19fX19fX19fX19es
        VtfX19fX19fX19fX19fX19fX19fX19fX19fX19fXVqzX19fX19fX19fXAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA
</value>
  </data>
</root>